services:

  ########################################################################
  #
  # MESSAGING
  #
  ########################################################################

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"


  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper


 

  ########################################################################
  #
  # CACHE
  #
  ########################################################################

  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/redis:/data
    command: [ "redis-server", "--appendonly", "yes" ]


  ########################################################################
  #
  # REGISTRIES
  #
  ########################################################################

  registry-agent:
    build:
      context: .
      dockerfile: registry-agent.Dockerfile
    image: registry-agent:3.0.3
    ports:
      - "7000:7000"


  registry-tool:
    build:
      context: .
      dockerfile: registry-tool.Dockerfile
    image: registry-tool:3.0.3
    ports:
      - "7001:7001"


 ########################################################################
  #
  # TOOLS
  #
  ########################################################################
    
  tool_file_reader:
    build:
      context: .
      dockerfile: tool_file_reader.Dockerfile
    image: tool_file_reader:3.0.3
    ports:
      - "7121:7121"                    
    depends_on:
      - registry-tool     
    volumes:
      - shared_files:/app/shared_files 

  tool_file_generator:
    build:
      context: .
      dockerfile: tool_file_generator.Dockerfile
    image: tool_file_generator:3.0.3
    ports:
      - "7122:7122"                    
    depends_on:
      - registry-tool 
    volumes:
      - shared_files:/app/shared_files               

  ########################################################################
  #
  # AGENTS
  #
  ########################################################################

  file_user_proxy:
    build:
      context: .
      dockerfile: agent.Dockerfile
    image: file_user_proxy:3.0.3
    ports:
      - "10006:10006"
    command: [ "file_user_proxy", "10006" ]
    depends_on:
      - redis
      - kafka
      - registry-agent
      - registry-tool
    environment:
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_API_VERSION: ${AZURE_OPENAI_API_VERSION}
      AZURE_OPENAI_BASE_URL: ${AZURE_OPENAI_BASE_URL}
      GPT_EMBEDDING_ENGINE: ${GPT_EMBEDDING_ENGINE}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_REGION: ${PINECONE_REGION}
      PINECONE_INDEX_NAME: ${PINECONE_INDEX_NAME}

  file_reader:
    build:
      context: .
      dockerfile: agent.Dockerfile
    image: file_reader:3.0.3
    ports:
      - "10007:10007"
    command: [ "file_reader", "10007" ]
    depends_on:
      - redis
      - kafka
      - registry-agent
      - registry-tool
    environment:
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_API_VERSION: ${AZURE_OPENAI_API_VERSION}
      AZURE_OPENAI_BASE_URL: ${AZURE_OPENAI_BASE_URL}
      GPT_EMBEDDING_ENGINE: ${GPT_EMBEDDING_ENGINE}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_REGION: ${PINECONE_REGION}
      PINECONE_INDEX_NAME: ${PINECONE_INDEX_NAME}
    volumes:
      - shared_files:/app/shared_files 
 
  file_assistant:
    build:
      context: .
      dockerfile: agent.Dockerfile
    image: file_assistant:3.0.3
    ports:
      - "10008:10008"
    command: [ "file_assistant", "10008" ]
    depends_on:
      - redis
      - kafka
      - registry-agent
      - registry-tool
    environment:
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_API_VERSION: ${AZURE_OPENAI_API_VERSION}
      AZURE_OPENAI_BASE_URL: ${AZURE_OPENAI_BASE_URL}
      GPT_EMBEDDING_ENGINE: ${GPT_EMBEDDING_ENGINE}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_REGION: ${PINECONE_REGION}
      PINECONE_INDEX_NAME: ${PINECONE_INDEX_NAME}

  file_generator:
    build:
      context: .
      dockerfile: agent.Dockerfile
    image: file_generator:3.0.3
    ports:
      - "10009:10009"
    command: [ "file_generator", "10009" ]
    depends_on:
      - redis
      - kafka
      - registry-agent
      - registry-tool
    environment:
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_API_VERSION: ${AZURE_OPENAI_API_VERSION}
      AZURE_OPENAI_BASE_URL: ${AZURE_OPENAI_BASE_URL}
      GPT_EMBEDDING_ENGINE: ${GPT_EMBEDDING_ENGINE}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_REGION: ${PINECONE_REGION}
      PINECONE_INDEX_NAME: ${PINECONE_INDEX_NAME}

  ########################################################################
  #
  # SWARMS
  #
  ########################################################################
  
  file_swarm:
    build:
      context: .
      dockerfile: swarm.Dockerfile
    image: file_swarm:3.0.3
    ports:
      - "10102:10102"
    command: [ "file_swarm", "10102" ]
    depends_on:
      - redis
      - kafka
      - registry-agent
    environment:
      AZURE_OPENAI_API_KEY: ${AZURE_OPENAI_API_KEY}
      AZURE_OPENAI_API_VERSION: ${AZURE_OPENAI_API_VERSION}
      AZURE_OPENAI_BASE_URL: ${AZURE_OPENAI_BASE_URL}
      GPT_EMBEDDING_ENGINE: ${GPT_EMBEDDING_ENGINE}
      PINECONE_API_KEY: ${PINECONE_API_KEY}
      PINECONE_REGION: ${PINECONE_REGION}
      PINECONE_INDEX_NAME: ${PINECONE_INDEX_NAME}

 ########################################################################
  #
  # STREAMLIT
  #
  ########################################################################

  streamlit_frontend:
    build:
      context: ./frontend
      dockerfile: streamlit.Dockerfile
    image: streamlit_frontend:latest
    ports:
      - "8501:8501"
    depends_on:
      - file_user_proxy
    environment:
      - API_BASE_URL=http://clothes_user_proxy:10002

volumes:
  shared_files:
    driver: local